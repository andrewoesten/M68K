<html><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252"></head><body>
<title>LINK</title>

<h1>LINK</h1>
<p>
<b>Operation:</b>  
<br>
<code>  </code>SP - 4 --&gt;; SP; An --&gt;; (SP);
<br>
<code>  </code>SP --&gt;; An; SP + d --&gt;; SP
</p><p>
</p><p>
<b>Assembler Syntax:</b>
<br>
<code>  </code>LINK  An, #&lt;displacement&gt;
</p><p>
<b>Attributes:</b>  Size = (Word, Long)
<br>
</p><p>
<b>Description:</b>  Pushes the contents of the specified address 
<br>
<code>  </code>register onto the stack.  Then loads the updated stack pointer 
<br>
<code>  </code>into the address register.  Finally, adds the displacement 
<br>
<code>  </code>value to the stack pointer.  For word-size operation, the 
<br>
<code>  </code>displacement is the sign-extended word following the 
<br>
<code>  </code>operation word.  For long-size operation, the displacement 
<br>
<code>  </code>is the long word following the operation word.  The address 
<br>
<code>  </code>register occupies one long word on the stack.  The user 
<br>
<code>  </code>should specify a negative displacement in order to allocate 
<br>
<code>  </code>stack area. 
</p><p>
<b>Condition Codes:</b>
<br>
<code>  </code>Not affected.
</p><p>

</p></body></html>
<HTML><BODY>
<title>CMPM</title>

<H1>CMPM</H1>
<p>
<b>Operation:</b>  
<br>
<code>  </code>Compare 2 memory locations
<p>
<p>
<b>Assembler Syntax:</b>
<br>
<code>  </code>CMPM  (Ay)+, (Ax)+
<p>
<b>Attributes:</b>  Size = (Byte, Word, Long)
<p>
<b>Description:</b>  Subtracts the source operand from the destination 
<br>
<code>  </code>operand and sets the condition codes according to the result; 
<br>
<code>  </code>the destination location is not changed.  The operands are 
<br>
<code>  </code>always addressed with the postincrement addressing mode, 
<br>
<code>  </code>using the address registers specified in the instruciton.
<br>
<code>  </code>The size of the operation may be specified as byte, word, 
<br>
<code>  </code>or long.
<p>
<b>Condition Codes:</b>
<br>
<br>
<code>  </code>X   Not affected.
<br>
<code>  </code>N   Set if the result is negative.  Cleared otherwise.
<br>
<code>  </code>Z   Set if the result is zero.  Cleared otherwise.
<br>
<code>  </code>V   Set if an overflow occurs.  Cleared otherwise.
<br>
<code>  </code>C   Set if a borrow occurs.  Cleared otherwise.
<p>
<b>Example:</b><br>
<code>
<br>
1)<br>
Im mem = $1000 is the number $1234<br>
In mem = $2000 is the number $2345<br>
A0 = $1000<br>
A1 = $2000<br>
<br>
CMPM.W (A0)+,(A1)+<br>
<br>
Result:<br>
A0 and A1 will be incremented by two.<br>
The flags will be set accordingly.<br>
No memory content is changed.<br>
</BODY></HTML>

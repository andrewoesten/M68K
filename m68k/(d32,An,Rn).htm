<html><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252"></head><body>
<title>(d32,An,Rn)</title>

<h1>Address</h1> 
<h2>Register Indirect with Index</h2>
<h3>(bd,An,Xn*Scale)</h3>
<p>
The operand is in a memory location referenced by an effective
<br>
address computed by adding together the contents of the specified address
<br>
register, a second data or address register, and an optional displacement.
<br>
The displacement could be none, or 16bit or 32bit wide.
<br>
The value in the second register can either be a full long word or a sign-
<br>
extended word value.  This is specified by a .W or .L extension after
<br>
the register.  If no extension is used, the assembler assumes a word
<br>
value.<br>
The Index register can optionally be multiplied with 1 / 2 / 4 or 8

</p><p>
<b>As ADDRESS register can be used A0 .. A8<br>
As INDEX register can be used A0 .. A7 or D0 .. D7

</b></p><p><b>
<b>Assembler Syntax:</b>  
<br>
<code>  </code>(bd,An, Rn)
<br>
<code>  </code>(bd,An, Rn.W *8)
<br>
<code>  </code>(bd,An, Rn.L *4)
</b></p><p><b>

</b></p></body></html>